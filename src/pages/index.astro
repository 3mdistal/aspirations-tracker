---
import { getCollection } from "astro:content";
import { remark } from 'remark';
import html from 'remark-html';

const tasks = await getCollection("tasks");

// Function to convert Markdown to HTML
async function markdownToHtml(content: string) {
  const result = await remark()
    .use(html)
    .process(content);
  return result.toString();
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Task List</title>
		<style>
			.task {
				border: 1px solid #ccc;
				margin-bottom: 20px;
				padding: 15px;
				border-radius: 5px;
			}
			.task-title {
				font-size: 1.2em;
				font-weight: bold;
				margin-bottom: 10px;
			}
			.task-meta {
				font-size: 0.9em;
				color: #666;
				margin-bottom: 10px;
			}
			.task-content {
				white-space: pre-wrap;
			}
		</style>
	</head>
	<body>
		<h1>Task List</h1>
		{tasks.map(async (task) => {
			const contentHtml = await markdownToHtml(task.data.content);
			return (
				<div class="task">
					<div class="task-title">{task.data.title}</div>
					<div class="task-meta">
						{Object.entries(task.data.frontmatter).map(([key, value]) => (
							<div><strong>{key}:</strong> {value}</div>
						))}
					</div>
					<div set:html={contentHtml} class="task-content"></div>
				</div>
			);
		})}
	</body>
</html>
